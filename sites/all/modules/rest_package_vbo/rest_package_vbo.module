<?php
/**
 * Created by PhpStorm.
 * User: root
 * Date: 28/08/2015
 * Time: 09:17
 */
/**
 * Implements hook_action_info()
 */
function rest_package_vbo_action_info() {
    return array(
        'rest_package_vbo_action' => array(
            'type' => 'entity',
            'label' => t('Test Change Status Package'),
            'behavior' => array('changes_property'),
            'configurable' => FALSE,
            'vbo_configurable' => TRUE,
            'triggers' => array('any'),
        ),
    );
}
function rest_package_vbo_action( &$object, $context ) {
    $message = t('Package name is %name has been change, %status', array(
        '%name' => $object->name,
        '%status' => $context['status'],
    ));
    drupal_set_message($message);
}

function rest_package_vbo_action_form($form, &$form_state) {
    $form = array();
    $form['status'] = array(
        '#type' => 'select',
        '#title' => t('Choose your status'),
        '#options' => array(
            'enable' => t('Enable'),
            'disable' => t('Disable'),
        ),
        '#required' => TRUE,
    );
    return $form;
}
function rest_package_vbo_action_submit($form, &$form_state) {
    $return = array();
    $return['status'] = $form_state['values']['status'];
    return $return;
}
function rest_package_vbo_views_data_alter(&$data) {
    if ($data['rest_package']['table']['entity type'] = 'rest_package') {
        $data['rest_package']['views_bulk_operations'] = array(
            'title' => $data['rest_package']['table']['group'],
            'group' => t('Bulk rest package'),
            'help' => t('Provide a checkbox to select the row for bulk operations.'),
            'real field' => 'id',
            'field' => array(
                'handler' => 'rest_package_vbo_handler_field_operations',
                'click sortable' => FALSE,
            ),
        );
    }
}
class rest_package_vbo_handler_field_operations extends views_bulk_operations_handler_field_operations {
    public function get_entity_type() {
        $base_table = $this->view->base_table;

        // If the current field is under a relationship you can't be sure that the
        // base table of the view is the base table of the current field.
        // For example a field from a node author on a node view does have users as base table.
        if (!empty($this->options['relationship']) && $this->options['relationship'] != 'none') {
            $relationships = $this->view->display_handler->get_option('relationships');
            $options = $relationships[$this->options['relationship']];
            $data = views_fetch_data($options['table']);
            $base_table = $data[$options['field']]['relationship']['base'];
        }
        // The base table is now known, use it to determine the entity type.
        foreach (entity_get_info() as $entity_type => $info) {
            if (isset($info['base table']) && $info['base table'] == $base_table) {
                return $entity_type;
            }
        }
        return 'rest_package';
    }
}